TODO:

-once a beer has been received, it shouldn't be receivable again (just redirect to the beer)



THINGS I AM APOLOGIZING FOR:

-beer has 'id' and 'randID'. Because I'm using 'randID' as primary key, calling Beer.id DOES NOT return the numerical ID; it returns the 'randID' string. To get the numerical ID, you have to call Beer['id']. I am truly sorry.

Do we really need both of these?
  @beer.user = current_user.uid.to_i
  @beer.recipient = current_user.uid.to_i




Rails Notes:
  -inside a controller action, redirect_to isn't enough to keep code after that from executing. You have to 'return redirect_to ...'

  -for a database reset FROM THE MIGRATIONS, do `rake db:drop db:create db:migrate db:seed`
  -for a database reset FROM CURRENT SCHEMA, do `rake db:reset`







More Notes:

current_user is one of these:
 => #<ActiveRecord::Relation [#<User id: 3, name: "Dave Cohen", passhash: nil, email: nil, beersGiven: nil, beersReceived: nil, created_at: "2014-09-29 13:26:37", updated_at: "2014-09-29 13:26:37", provider: "identity", uid: "8", oauth_token: nil, oauth_expires_at: nil>]> 


2.1.2 :008 > Identity.all()
  Identity Load (0.3ms)  SELECT "identities".* FROM "identities"
 => #<ActiveRecord::Relation [#<Identity id: 8, name: "Dave Cohen", email: "dave@project768.com", password_digest: "$2a$10$d2pQu4d28A6Sm3eGMPyNJut7Up9WVntYG1/0rAXwMf1...", created_at: "2014-09-29 13:26:37", updated_at: "2014-09-29 13:26:37">]> 


